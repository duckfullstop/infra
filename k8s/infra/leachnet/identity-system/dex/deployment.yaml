apiVersion: apps/v1
kind: Deployment
metadata:
  name: dex
  namespace: identity-system
spec:
  # In a real scenario, consider the uptime requirements of things behind Dex authentication to decide how many replicas you need.
  # If also using it for Kubernetes authentication, you may want to use a DaemonSet instead for maximum redundancy.
  replicas: 1
  selector:
    matchLabels:
      app: dex
  template:
    metadata:
      labels:
        app: dex
    spec:
      # Give it Kubernetes API access for session data storage.
      serviceAccountName: dex
      containers:
      - name: dex
        image: ghcr.io/dexidp/dex:v2.27.0
        command: [/usr/local/bin/dex, serve, /cfg/config.yaml]
        ports:
          - containerPort: 5556
        env:
          - name: KUBERNETES_POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: TRAEFIK_FORWARD_AUTH_ID
            valueFrom:
              secretKeyRef:
                name: traefik-forward-auth
                key: DEX_ID
          - name: TRAEFIK_FORWARD_AUTH_SECRET
            valueFrom:
              secretKeyRef:
                name: traefik-forward-auth
                key: DEX_SECRET
          - name: KUBELOGON_ID
            valueFrom:
              secretKeyRef:
                name: dex-kube-authentication
                key: KUBE_AUTH_ID
          - name: KUBELOGON_SECRET
            valueFrom:
              secretKeyRef:
                name: dex-kube-authentication
                key: KUBE_AUTH_SECRET
        #envFrom:
        #- secretRef:
        #    name: github-auth-app
        livenessProbe:
          httpGet:
            path: /healthz
            port: 5556
          initialDelaySeconds: 20
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /healthz
            port: 5556
          initialDelaySeconds: 20
          periodSeconds: 5
        volumeMounts:
        - name: config
          mountPath: /cfg
        - name: tls
          mountPath: /tls
      volumes:
      - name: config
        configMap:
          name: dex
      - name: tls
        secret:
          secretName: dex-tls
